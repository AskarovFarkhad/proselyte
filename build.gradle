plugins {
    id 'java'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
}

group = 'com.askfar'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = "$javaVersion"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation "org.springframework.boot:spring-boot-starter-validation:$springValidationVersion"

    // db
    implementation 'org.springframework:spring-jdbc'
    implementation "org.flywaydb:flyway-core:$flywayCoreVersion"
    runtimeOnly "org.flywaydb:flyway-database-postgresql:$flywaydbVersion"
    implementation "org.postgresql:postgresql:$postgresqlVersion"
    runtimeOnly "org.postgresql:r2dbc-postgresql:$r2dbcPostgresqlVersion"

    // unit tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation "org.testcontainers:postgresql:$testContainersPostgresqlVersion"
    testImplementation 'org.testcontainers:r2dbc'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // utils
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    // open api
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$openApiVersion"
}

tasks.named('test') {
    useJUnitPlatform()
}